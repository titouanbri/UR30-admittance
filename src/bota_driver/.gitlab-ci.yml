stages:
  - format-check
  - build-test-lint
  - hardware-test-startup
  - hardware-test-func
  - hardware-test-freq
  - deploy-image
  - cleanup
  - release
  - docs

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  ROS_DISTRO: "noetic"
  DOCKER_TEST_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"

clang_format_check:
  stage: format-check
  image: docker:git
  services:
    - name: docker:dind
      command: ["--registry-mirror", "https://mirror.gcr.io"] # Specify the registry mirror here
  variables:
    CLANG_FORMAT_CHECK: "file"
    CLANG_FORMAT_VERSION: "8"
  before_script:
    - echo $DOCKER_HOST && docker info && apk add --update bash coreutils tar py-pip
    - git clone --quiet --depth 1 https://github.com/ros-industrial/industrial_ci .industrial_ci -b master
  script:
    - >
        .industrial_ci/gitlab.sh ROS_DISTRO=$ROS_DISTRO 
        CLANG_FORMAT_CHECK=$CLANG_FORMAT_CHECK 
        CLANG_FORMAT_VERSION=$CLANG_FORMAT_VERSION

build_run_tests_check_lint:
  stage: build-test-lint
  image: docker:git
  services:
    - name: docker:dind
      command: ["--registry-mirror", "https://mirror.gcr.io"] # Specify the registry mirror here
  variables:
    PRERELEASE: "false"
    CLANG_TIDY: "true"
    BUILDER: "colcon"
    CATKIN_LINT: "true"

  before_script:
    - apk add --update bash coreutils tar py-pip
    - git clone --quiet --depth 1 https://github.com/ros-industrial/industrial_ci .industrial_ci -b master
  script:
    - >
        .industrial_ci/gitlab.sh ROS_DISTRO=$ROS_DISTRO
        CLANG_TIDY=$CLANG_TIDY  
        PRERELEASE=$PRERELEASE 
        BUILDER=$BUILDER 
        CATKIN_LINT=$CATKIN_LINT 
        DOCKER_COMMIT="$DOCKER_TEST_IMAGE"
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker push $DOCKER_TEST_IMAGE

deploy_image:
  only:
    - master
    - /^(noetic|melodic|lunar|kinetic|jade)-.*devel$/
  stage: deploy-image
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--registry-mirror", "https://mirror.gcr.io"] # Specify the registry mirror here
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - docker pull $DOCKER_TEST_IMAGE || true
    - docker tag $DOCKER_TEST_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

build_deb_packages:
  only:
    - master
    - /^(noetic|melodic|lunar|kinetic|jade)-.*devel$/
  stage: release
  image: ros:$ROS_DISTRO-ros-base
  before_script:
    - apt update && apt install -y git build-essential python3-osrf-pycommon python3-catkin-tools dh-make fakeroot python3-bloom python3-vcstool
    - mkdir -p /root/catkin_ws/src && cp -r . /root/catkin_ws/src/bota_driver/
  script:
    - . /opt/ros/$ROS_DISTRO/setup.bash && cd /root/catkin_ws/ && rosdep install --from-path src --ignore-src -y && apt-get clean && catkin build bota_driver
    - cd /root/catkin_ws/src/bota_driver && source ./env.sh && ./create_debs.sh && mkdir -pv /builds/$CI_PROJECT_PATH/build && cp  /root/catkin_ws/packages/* /builds/$CI_PROJECT_PATH/build
  # The files which are to be made available in GitLab
  artifacts:
    paths:
      - build/*

hardware_test_startup:
  stage: hardware-test-startup
  tags:
    - hwtests
  image: ros:$ROS_DISTRO-ros-base
  before_script:
    - apt update && apt install -y git build-essential python3-osrf-pycommon python3-catkin-tools dh-make
    - mkdir -p /root/catkin_ws/src && cp -r . /root/catkin_ws/src/bota_driver/
  script:
    - . /opt/ros/$ROS_DISTRO/setup.bash && cd /root/catkin_ws/ && rosdep install --from-path src --ignore-src -y && apt-get clean && catkin build bota_driver
    - cd /root/catkin_ws/src/bota_driver && tests/hardware_test_startup.sh

hardware_test_func:
  stage: hardware-test-func
  tags:
    - hwtests
  image: ros:$ROS_DISTRO-ros-base
  before_script:
    - apt update && apt install -y git build-essential python3-osrf-pycommon python3-catkin-tools dh-make
    - mkdir -p /root/catkin_ws/src && cp -r . /root/catkin_ws/src/bota_driver/
  script:
    - . /opt/ros/$ROS_DISTRO/setup.bash && cd /root/catkin_ws/ && rosdep install --from-path src --ignore-src -y && apt-get clean && catkin build bota_driver
    - cd /root/catkin_ws/src/bota_driver && tests/hardware_test_func.sh

hardware_test_freq:
  stage: hardware-test-freq
  tags:
    - hwtests
  image: ros:$ROS_DISTRO-ros-base
  before_script:
    - apt update && apt install -y git build-essential python3-osrf-pycommon python3-catkin-tools dh-make
    - mkdir -p /root/catkin_ws/src && cp -r . /root/catkin_ws/src/bota_driver/
  script:
    - . /opt/ros/$ROS_DISTRO/setup.bash && cd /root/catkin_ws/ && rosdep install --from-path src --ignore-src -y && apt-get clean && catkin build bota_driver
    - cd /root/catkin_ws/src/bota_driver && tests/hardware_test_freq.sh

delete_test_image:
  # taken from https://docs.gitlab.com/ee/user/packages/container_registry/#delete-images-using-gitlab-cicd
  except:
    - master
    - /^(noetic|melodic|lunar|kinetic|jade)-.*devel$/
  image: docker:latest
  stage: cleanup
  services:
    - name: docker:dind
      command: ["--registry-mirror", "https://mirror.gcr.io"] # Specify the registry mirror here
  variables:
    REG_SHA256: ade837fc5224acd8c34732bf54a94f579b47851cc6a7fd5899a98386b782e228
    REG_VERSION: 0.16.1
  before_script:
    - apk add --no-cache curl
    - curl --fail --show-error --location "https://github.com/genuinetools/reg/releases/download/v$REG_VERSION/reg-linux-amd64" --output /usr/local/bin/reg
    - echo "$REG_SHA256  /usr/local/bin/reg" | sha256sum -c -
    - chmod a+x /usr/local/bin/reg
  script:
    - /usr/local/bin/reg rm -d --auth-url $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $DOCKER_TEST_IMAGE

pages:
  only:
    - master
  stage: docs
  image: alpine
  before_script:
    - apk update
    - apk add doxygen
    ## Uncomment the following line if you use graphviz dot graphs
    - apk add ttf-freefont graphviz
  script:
    - cd docs && doxygen Doxyfile && cd ..
    - mv docs/html/ public/
  artifacts:
    paths:
      - public
